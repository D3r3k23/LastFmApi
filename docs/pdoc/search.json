[{"fullname": "lastfmget", "modulename": "lastfmget", "qualname": "", "type": "module", "doc": "<p>Python package for accessing Last.fm scrobble data using the public API.</p>\n\n<h3 id=\"pypi\">PyPi</h3>\n\n<p><code>pypi.org/project/lastfmget</code></p>\n\n<h3 id=\"github\">Github</h3>\n\n<p><code>github.com/D3r3k23/LastFmGet</code></p>\n"}, {"fullname": "lastfmget.core", "modulename": "lastfmget.core", "qualname": "", "type": "module", "doc": "<p>Core functions for lastfmget</p>\n\n<p>Example api_cfg.yaml file:\n'''\napi_url: http://ws.audioscrobbler.com/2.0/\napi_key: <API KEY>\nuser_agent: <USER AGENT>\ncall_rate: 5 # Calls per second\ncache:\n  enable: true\n'''</p>\n"}, {"fullname": "lastfmget.core.Config", "modulename": "lastfmget.core", "qualname": "Config", "type": "class", "doc": "<p>Config(api_url, api_key, headers, call_interval, cache_enabled)</p>\n"}, {"fullname": "lastfmget.core.Config.__init__", "modulename": "lastfmget.core", "qualname": "Config.__init__", "type": "function", "doc": "<p>Create new instance of Config(api_url, api_key, headers, call_interval, cache_enabled)</p>\n", "parameters": ["_cls", "api_url", "api_key", "headers", "call_interval", "cache_enabled"], "funcdef": "def"}, {"fullname": "lastfmget.core.Config.api_url", "modulename": "lastfmget.core", "qualname": "Config.api_url", "type": "variable", "doc": "<p>Alias for field number 0</p>\n"}, {"fullname": "lastfmget.core.Config.api_key", "modulename": "lastfmget.core", "qualname": "Config.api_key", "type": "variable", "doc": "<p>Alias for field number 1</p>\n"}, {"fullname": "lastfmget.core.Config.headers", "modulename": "lastfmget.core", "qualname": "Config.headers", "type": "variable", "doc": "<p>Alias for field number 2</p>\n"}, {"fullname": "lastfmget.core.Config.call_interval", "modulename": "lastfmget.core", "qualname": "Config.call_interval", "type": "variable", "doc": "<p>Alias for field number 3</p>\n"}, {"fullname": "lastfmget.core.Config.cache_enabled", "modulename": "lastfmget.core", "qualname": "Config.cache_enabled", "type": "variable", "doc": "<p>Alias for field number 4</p>\n"}, {"fullname": "lastfmget.core.init", "modulename": "lastfmget.core", "qualname": "init", "type": "function", "doc": "<p>Set up LastFmApi using api_cfg.yaml file.</p>\n\n<ul>\n<li>Should only be called once at start of program</li>\n</ul>\n\n<p>Globals:</p>\n\n<ul>\n<li>CFG</li>\n<li>ready</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>cfg_fn (str) -- path to api_cfg YAML file</li>\n</ul>\n", "parameters": ["cfg_fn"], "funcdef": "def"}, {"fullname": "lastfmget.errors", "modulename": "lastfmget.errors", "qualname": "", "type": "module", "doc": "<p></p>\n"}, {"fullname": "lastfmget.errors.raise_lastfm_error", "modulename": "lastfmget.errors", "qualname": "raise_lastfm_error", "type": "function", "doc": "<p>Raises a LastFmError exception.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>code (int) -- Error code</li>\n<li>msg (str) -- Error message</li>\n</ul>\n", "parameters": ["code", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.LastFmGetError", "modulename": "lastfmget.errors", "qualname": "LastFmGetError", "type": "class", "doc": "<p>Generic lastfmget error.</p>\n"}, {"fullname": "lastfmget.errors.LastFmGetError.__init__", "modulename": "lastfmget.errors", "qualname": "LastFmGetError.__init__", "type": "function", "doc": "<p>Calls Exception(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.NotConfiguredError", "modulename": "lastfmget.errors", "qualname": "NotConfiguredError", "type": "class", "doc": "<p>lastfmget not configured - must call lastfmget.init() first.</p>\n"}, {"fullname": "lastfmget.errors.NotConfiguredError.__init__", "modulename": "lastfmget.errors", "qualname": "NotConfiguredError.__init__", "type": "function", "doc": "<p>Calls LastFmGetError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.LastFmError", "modulename": "lastfmget.errors", "qualname": "LastFmError", "type": "class", "doc": "<p>Generic Last.fm response error.</p>\n"}, {"fullname": "lastfmget.errors.LastFmError.__init__", "modulename": "lastfmget.errors", "qualname": "LastFmError.__init__", "type": "function", "doc": "<p>Calls LastFmGetError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.ParamError", "modulename": "lastfmget.errors", "qualname": "ParamError", "type": "class", "doc": "<p>Invalid parameters provided - example: user not found.</p>\n"}, {"fullname": "lastfmget.errors.ParamError.__init__", "modulename": "lastfmget.errors", "qualname": "ParamError.__init__", "type": "function", "doc": "<p>Calls LastFmError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.ApiKeyError", "modulename": "lastfmget.errors", "qualname": "ApiKeyError", "type": "class", "doc": "<p>Last.fm API key is invalid.</p>\n"}, {"fullname": "lastfmget.errors.ApiKeyError.__init__", "modulename": "lastfmget.errors", "qualname": "ApiKeyError.__init__", "type": "function", "doc": "<p>Calls LastFmError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.OfflineError", "modulename": "lastfmget.errors", "qualname": "OfflineError", "type": "class", "doc": "<p>Last.fm offline.</p>\n"}, {"fullname": "lastfmget.errors.OfflineError.__init__", "modulename": "lastfmget.errors", "qualname": "OfflineError.__init__", "type": "function", "doc": "<p>Calls LastFmError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.errors.RateLimitError", "modulename": "lastfmget.errors", "qualname": "RateLimitError", "type": "class", "doc": "<p>Last.fm API rate limit exceeded - decrease api_cfg.call_rate.</p>\n"}, {"fullname": "lastfmget.errors.RateLimitError.__init__", "modulename": "lastfmget.errors", "qualname": "RateLimitError.__init__", "type": "function", "doc": "<p>Calls LastFmError(msg)</p>\n", "parameters": ["self", "msg"], "funcdef": "def"}, {"fullname": "lastfmget.methods", "modulename": "lastfmget.methods", "qualname": "", "type": "module", "doc": "<p>Methods for getting formatted data from Last.fm.</p>\n\n<ul>\n<li>Example responses shown in LastFmGet/test/dump</li>\n</ul>\n"}, {"fullname": "lastfmget.methods.user_info", "modulename": "lastfmget.methods", "qualname": "user_info", "type": "function", "doc": "<p>Gets info about a user.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  {\n    'name' (str) -- username\n    'playcount' (int) -- number of scrobbles\n    'registered' (int) -- registration date Unix timestamp\n    'url' (str) -- user's Last.fm URL\n  }\n</code></pre>\n", "parameters": ["user"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_now_playing", "modulename": "lastfmget.methods", "qualname": "user_now_playing", "type": "function", "doc": "<p>Gets the user's currently playing track.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  None if no track playing, else:\n  {\n    'name' (str) -- track name\n    'artist' (str) -- artist name\n    'album' (str) -- album name\n  }\n</code></pre>\n", "parameters": ["user"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_recent_tracks", "modulename": "lastfmget.methods", "qualname": "user_recent_tracks", "type": "function", "doc": "<p>Gets the user's recent tracks.</p>\n\n<ul>\n<li>Excludes currently playing tracks</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>count (int) -- number of tracks</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  [\n    {\n      'name' (str) -- track name\n      'artist' (str) -- artist name\n      'album' (str) -- album name\n      'date' (int or None) -- date Unix timestamp - None if track is now playing\n    }\n  ]\n</code></pre>\n", "parameters": ["user", "count"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_top_artists", "modulename": "lastfmget.methods", "qualname": "user_top_artists", "type": "function", "doc": "<p>Gets the user's top artists.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>count (int) -- number of artists</li>\n<li>period (str) -- time period [overall, 7day, 1month, 3month, 6month, 12month]</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  [\n    {\n      'name' (str) -- artist name\n      'rank' (int) -- ranking\n      'playcount' (int) -- number of scrobbles\n    }\n  ]\n</code></pre>\n", "parameters": ["user", "count", "period"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_top_albums", "modulename": "lastfmget.methods", "qualname": "user_top_albums", "type": "function", "doc": "<p>Gets the user's top albums.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>count (int) -- number of albums</li>\n<li>period (str) -- time period [overall, 7day, 1month, 3month, 6month, 12month]</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  [\n    {\n      'name' (str) -- album name\n      'artist' (str) -- artist name\n      'rank' (int) -- ranking\n      'playcount' (int) -- number of scrobbles\n    }\n  ]\n</code></pre>\n", "parameters": ["user", "count", "period"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_top_tracks", "modulename": "lastfmget.methods", "qualname": "user_top_tracks", "type": "function", "doc": "<p>Gets the user's top tracks.</p>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>count (int) -- number of tracks</li>\n<li>period (str) -- time period [overall, 7day, 1month, 3month, 6month, 12month]</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  [\n    {\n      'name' (str) -- track name\n      'artist' (str) -- artist name\n      'rank' (int) -- ranking\n      'playcount' (int) -- number of scrobbles\n      'duration' (int) -- track duration (seconds)\n    }\n  ]\n</code></pre>\n", "parameters": ["user", "count", "period"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_weekly_chart_list", "modulename": "lastfmget.methods", "qualname": "user_weekly_chart_list", "type": "function", "doc": "<p>Gets a list of the user's available charts.</p>\n\n<ul>\n<li>Chart is defined by a date range</li>\n<li>For use by chart methods</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  [\n    {\n      'start' (int) -- chart start Unix timestamp\n      'end' (int) -- chart end Unix timestamp\n    }\n  ]\n</code></pre>\n", "parameters": ["user"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_weekly_artist_chart", "modulename": "lastfmget.methods", "qualname": "user_weekly_artist_chart", "type": "function", "doc": "<p>Gets the user's artist chart for the given date range.</p>\n\n<ul>\n<li>Should use timestamps generated by user_weekly_chart_list</li>\n<li>Can omit end</li>\n<li>Default is latest chart</li>\n<li>Timestamps of returned chart may differ from arguments</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>start (int) -- chart start Unix timestamp</li>\n<li>end (int) -- chart end Unix timestamp</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  {\n    'start' (int) -- chart start Unix timestamp\n    'end' (int) -- chart end Unix timestamp\n    'chart': [\n      {\n        'name' (str) -- artist name\n        'rank' (int) -- chart rank\n        'playcount' (int) -- number of scrobbles in chart\n      }\n    ]\n  }\n</code></pre>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_weekly_album_chart", "modulename": "lastfmget.methods", "qualname": "user_weekly_album_chart", "type": "function", "doc": "<p>Gets the user's album chart for the given date range.</p>\n\n<ul>\n<li>Should use timestamps generated by user_weekly_chart_list</li>\n<li>Can omit end</li>\n<li>Default is latest chart</li>\n<li>Timestamps of returned chart may differ from arguments</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>start (int) -- chart start Unix timestamp</li>\n<li>end (int) -- chart end Unix timestamp</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  {\n    'start' (int) -- chart start Unix timestamp\n    'end' (int) -- chart end Unix timestamp\n    'chart': [\n      {\n        'name' (str) -- album name\n        'artist' (str) -- artist name\n        'rank' (int) -- chart rank\n        'playcount' (int) -- number of scrobbles in chart\n      }\n    ]\n  }\n</code></pre>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}, {"fullname": "lastfmget.methods.user_weekly_track_chart", "modulename": "lastfmget.methods", "qualname": "user_weekly_track_chart", "type": "function", "doc": "<p>Gets the user's track chart for the given date range.</p>\n\n<ul>\n<li>Should use timestamps generated by user_weekly_chart_list</li>\n<li>Can omit end</li>\n<li>Default is latest chart</li>\n<li>Timestamps of returned chart may differ from arguments</li>\n</ul>\n\n<p>Arguments:</p>\n\n<ul>\n<li>user (str) -- username</li>\n<li>start (int) -- chart start Unix timestamp</li>\n<li>end (int) -- chart end Unix timestamp</li>\n</ul>\n\n<p>Returns:</p>\n\n<pre><code>  {\n    'start' (int) -- chart start Unix timestamp\n    'end' (int) -- chart end Unix timestamp\n    'chart': [\n      {\n        'name' (str) -- track name\n        'artist' (str) -- artist name\n        'rank' (int) -- chart rank\n        'playcount' (int) -- number of scrobbles in chart\n      }\n    ]\n  }\n</code></pre>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods", "modulename": "lastfmget.raw_methods", "qualname": "", "type": "module", "doc": "<p>Thin wrappers around Last.fm API methods.</p>\n\n<ul>\n<li>Module generated by gen_raw_methods_module.py from methods.yaml</li>\n</ul>\n"}, {"fullname": "lastfmget.raw_methods.user_info_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_info_raw", "type": "function", "doc": "<p>user.getInfo</p>\n", "parameters": ["user"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_recent_tracks_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_recent_tracks_raw", "type": "function", "doc": "<p>user.getRecentTracks</p>\n", "parameters": ["user", "limit", "page"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_top_artists_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_top_artists_raw", "type": "function", "doc": "<p>user.getTopArtists</p>\n", "parameters": ["user", "limit", "page", "period"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_top_albums_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_top_albums_raw", "type": "function", "doc": "<p>user.getTopAlbums</p>\n", "parameters": ["user", "limit", "page", "period"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_top_tracks_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_top_tracks_raw", "type": "function", "doc": "<p>user.getTopTracks</p>\n", "parameters": ["user", "limit", "page", "period"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_weekly_chart_list_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_weekly_chart_list_raw", "type": "function", "doc": "<p>user.getWeeklyChartLIst</p>\n", "parameters": ["user"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_weekly_artist_chart_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_weekly_artist_chart_raw", "type": "function", "doc": "<p>user.getWeeklyArtistChart</p>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_weekly_album_chart_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_weekly_album_chart_raw", "type": "function", "doc": "<p>user.getWeeklyAlbumChart</p>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}, {"fullname": "lastfmget.raw_methods.user_weekly_track_chart_raw", "modulename": "lastfmget.raw_methods", "qualname": "user_weekly_track_chart_raw", "type": "function", "doc": "<p>user.getWeeklyTrackChart</p>\n", "parameters": ["user", "start", "end"], "funcdef": "def"}]